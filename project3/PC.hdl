// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    Register(in = regIn, load = true, out = regOut, out = out);
    Inc16(in = regOut, out = incRegOut);

    /*
    Using 8-Way 16-Bit Mux
    We have 3 input control bits (reset, load, inc) which control the input as follows:
    0 0 0 (input pin 'a') => Output remains same
    0 0 1 (input pin 'b') => Output += 1
    0 1 X (input pin 'c', 'd') => Output = in
    1 X X (input pin 'e', 'f', 'g', 'h') => Output = false
    */
    Mux8Way16(a = regOut, b = incRegOut, c = in, d = in, e = false, f = false, g = false, h = false, sel[2] = reset, sel[1] = load, sel[0] = inc, out = regIn);
}